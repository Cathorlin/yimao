Create Or Replace Package Bl_Customer_Order_Line_Api Is
  --新增初始化
  Procedure New__(Rowlist_ Varchar2, User_Id_ Varchar2, A311_Key_ Varchar2);
  --保存数据
  Procedure Modify__(Rowlist_  Varchar2,
                     User_Id_  Varchar2,
                     A311_Key_ Varchar2);

  Procedure Remove__(Rowlist_  Varchar2,
                     User_Id_  Varchar2,
                     A311_Key_ Varchar2);
  --取消订单行
  Procedure Set_Cancel_Reason(Rowlist_  Varchar2,
                              User_Id_  Varchar2,
                              A311_Key_ Varchar2);
  --自定义的表
  Procedure Usermodify__(Row_     In Bl_Customer_Order_Line%Rowtype,
                         User_Id_ In Varchar2);

  --列发生修改 执行
  Procedure Itemchange__(Column_Id_   Varchar2,
                         Mainrowlist_ Varchar2,
                         Rowlist_     Varchar2,
                         User_Id_     Varchar2,
                         Outrowlist_  Out Varchar2);
  --PROCEDURE ITEMCHANGE__(COLUMN_ID_ VARCHAR2 , ROWLIST_ VARCHAR2,USER_ID_ VARCHAR2,A311_KEY_ VARCHAR2);
  --获取 是否可以新增 修改
  Function Checkbutton__(Dotype_   In Varchar2,
                         Order_No_ In Varchar2,
                         User_Id_  In Varchar2) Return Varchar2;

  --修改列的可编辑性
  Function Checkuseable(Doaction_  In Varchar2,
                        Column_Id_ In Varchar,
                        Rowlist_   In Varchar2) Return Varchar2;

  --ORDER_NO  VARCHAR2(12)  N
  --LINE_NO VARCHAR2(4) N
  --REL_NO  VARCHAR2(4) N
  --LINE_ITEM_NO  NUMBER  N

  Function Get_Plan_Qty__(Order_No_     In Varchar2,
                          Line_No_      In Varchar2,
                          Rel_No_       Varchar2,
                          Line_Item_No_ Number) Return Number;
  Function Get_Factory_Order_(Order_No_     In Varchar2,
                              Line_No_      In Varchar2,
                              Rel_No_       Varchar2,
                              Line_Item_No_ Number,
                              If_Contract   In Varchar2 Default '0')
    Return Varchar2;
  Procedure Get_Factory_Orderrow_(Order_No_     In Varchar2,
                                  Line_No_      In Varchar2,
                                  Rel_No_       Varchar2,
                                  Line_Item_No_ Number,
                                  Outrow_       Out Bl_v_Customer_Order_V01%Rowtype);
  Function Get_Par_Order_(Order_No_     In Varchar2,
                          Line_No_      In Varchar2,
                          Rel_No_       Varchar2,
                          Line_Item_No_ Number,
                          If_Contract   In Varchar2 Default '0')
    Return Varchar2;
  --根据line_key 获取 OBJID
  Function Get_Objid_By_Line_Key(Line_Key_ In Varchar2) Return Varchar2;
  --根据line_key 获取 订单行
  Procedure Get_Record_By_Line_Key(Line_Key_ In Varchar2,
                                   Record_   Out Bl_v_Customer_Order_Line%Rowtype);
End Bl_Customer_Order_Line_Api;
/
Create Or Replace Package Body Bl_Customer_Order_Line_Api Is
  Type t_Cursor Is Ref Cursor;
  Procedure New__(Rowlist_ Varchar2, User_Id_ Varchar2, A311_Key_ Varchar2) Is
    Attr_       Varchar2(4000);
    Info_       Varchar2(4000);
    Objid_      Varchar2(4000);
    Objversion_ Varchar2(4000);
    Action_     Varchar2(100);
    Attr_Out    Varchar2(4000);
    Row_        Customer_Order_Line_Tab%Rowtype;
    Mainrow_    Bl_v_Customer_Order%Rowtype;
    Row1_       Bl_v_Cust_Order_Line_Pack%Rowtype;
    Cur_        t_Cursor;
  Begin
    Action_             := 'PREPARE';
    Row1_.Order_Line_No := Pkg_a.Get_Item_Value('ORDER_LINE_NO', Rowlist_);
    If Nvl(Row1_.Order_Line_No, '-') <> '-' Then
      --包装
      Open Cur_ For
        Select t.*
          From Customer_Order_Line_Tab t
         Where Order_No || '-' || Line_No || '-' || Rel_No =
               Row1_.Order_Line_No
           And t.Line_Item_No < 0;
      Fetch Cur_
        Into Row_;
      If Cur_%Notfound Then
        Close Cur_;
        Pkg_a.Setfailed(A311_Key_,
                        'BL_V_CUSTOMER_ORDER_LINE',
                        Row1_.Order_Line_No);
        Raise_Application_Error(-20101, '错误的rowid');
        Return;
      End If;
      Close Cur_;
    
      Client_Sys.Add_To_Attr('LINE_ITEM_NO', Row_.Line_Item_No, Attr_);
      Client_Sys.Add_To_Attr('CONTRACT', Row_.Contract, Attr_);
      Client_Sys.Add_To_Attr('QTY_ASSIGNED', Row_.Qty_Assigned, Attr_);
      Client_Sys.Add_To_Attr('BUY_QTY_DUE', Row_.Buy_Qty_Due, Attr_);
      Client_Sys.Add_To_Attr('SALE_UNIT_PRICE',
                             Row_.Sale_Unit_Price,
                             Attr_);
      Client_Sys.Add_To_Attr('ORDER_NO', Row_.Order_No, Attr_);
      Client_Sys.Add_To_Attr('LINE_NO', Row_.Line_No, Attr_);
      Client_Sys.Add_To_Attr('REL_NO', Row_.Rel_No, Attr_);
      Client_Sys.Add_To_Attr('CONV_FACTOR', Row_.Conv_Factor, Attr_);
      Client_Sys.Add_To_Attr('COST', Row_.Cost, Attr_);
      Client_Sys.Add_To_Attr('QTY_SHIPPED', Row_.Qty_Shipped, Attr_);
      Client_Sys.Add_To_Attr('REVISED_QTY_DUE',
                             Row_.Revised_Qty_Due,
                             Attr_);
      Client_Sys.Add_To_Attr('PLANNED_DELIVERY_DATE',
                             Row_.Planned_Delivery_Date,
                             Attr_);
      Client_Sys.Add_To_Attr('PLANNED_DUE_DATE',
                             Row_.Planned_Due_Date,
                             Attr_);
      Client_Sys.Add_To_Attr('PROMISED_DELIVERY_DATE',
                             Row_.Promised_Delivery_Date,
                             Attr_);
      Client_Sys.Add_To_Attr('QTY_INVOICED', Row_.Qty_Invoiced, Attr_);
      Client_Sys.Add_To_Attr('BASE_SALE_UNIT_PRICE',
                             Row_.Base_Sale_Unit_Price,
                             Attr_);
      Client_Sys.Add_To_Attr('WANTED_DELIVERY_DATE',
                             Row_.Wanted_Delivery_Date,
                             Attr_);
      Client_Sys.Add_To_Attr('CURRENCY_RATE', Row_.Currency_Rate, Attr_);
      Customer_Order_Line_Api.New__(Info_,
                                    Objid_,
                                    Objversion_,
                                    Attr_,
                                    Action_);
      Attr_Out := Pkg_a.Get_Attr_By_Ifs(Attr_);
      Pkg_a.Set_Item_Value('ORDER_NO', Row_.Order_No, Attr_Out);
      Pkg_a.Set_Item_Value('LINE_NO', Row_.Line_No, Attr_Out);
      Pkg_a.Set_Item_Value('REL_NO', Row_.Rel_No, Attr_Out);
      Pkg_a.Set_Item_Value('LINE_ITEM_NO', '[ROWNUM]', Attr_Out);
    
      /* row_.sale_unit_price
      row_.order_no
      row_.line_no
      row_.rel_no
      row_.conv_factor
      row_.cost
      row_.qty_shipped
      row_.revised_qty_due
      row_.planned_delivery_date
      row_.planned_due_date
      row_.promised_delivery_date
      row_.qty_invoiced
      row_.base_sale_unit_price
      row_.wanted_delivery_date
      row_.currency_rate*/
      Open Cur_ For
        Select Price_With_Tax
          From Customer_Order_Tab t
         Where t.Order_No = Mainrow_.Order_No;
      Fetch Cur_
        Into Mainrow_.Price_With_Tax;
      Close Cur_;
      Pkg_a.Set_Item_Value('PRICE_WITH_TAX',
                           Mainrow_.Price_With_Tax,
                           Attr_Out);
    Else
      Attr_             := Pkg_a.Get_Attr_By_Bm(Rowlist_);
      Mainrow_.Order_No := Pkg_a.Get_Item_Value('ORDER_NO', Rowlist_);
      Open Cur_ For
        Select Price_With_Tax
          From Customer_Order_Tab t
         Where t.Order_No = Mainrow_.Order_No;
      Fetch Cur_
        Into Mainrow_.Price_With_Tax;
      Close Cur_;
      Customer_Order_Line_Api.New__(Info_,
                                    Objid_,
                                    Objversion_,
                                    Attr_,
                                    Action_);
      Attr_Out := Pkg_a.Get_Attr_By_Ifs(Attr_);
      Pkg_a.Set_Item_Value('PRICE_WITH_TAX',
                           Mainrow_.Price_With_Tax,
                           Attr_Out);
    End If;
  
    Pkg_a.Setresult(A311_Key_, Attr_Out);
    Return;
  End;
  Procedure Modify__(Rowlist_  Varchar2,
                     User_Id_  Varchar2,
                     A311_Key_ Varchar2) Is
    Row_        Bl_v_Customer_Order_Line%Rowtype;
    Attr_       Varchar2(4000);
    Info_       Varchar2(4000);
    Objid_      Varchar2(4000);
    Objversion_ Varchar2(4000);
    Action_     Varchar2(100);
    Index_      Varchar2(1);
    Cur_        t_Cursor;
    Pos_        Number;
    Pos1_       Number;
    i           Number;
    v_          Varchar(1000);
    Column_Id_  Varchar(1000);
    Data_       Varchar(4000);
    Doaction_   Varchar(10);
    Mainrow_    Customer_Order_Tab%Rowtype;
    Row0_       Bl_Customer_Order_Line%Rowtype;
    Mysql_      Varchar(4000);
    Ifmychange  Varchar(10);
  Begin
  
    Index_     := f_Get_Data_Index();
    Row_.Objid := Pkg_a.Get_Item_Value('OBJID', Rowlist_);
    Doaction_  := Nvl(Pkg_a.Get_Item_Value('DOACTION', Rowlist_), 'M');
  
    If Doaction_ = 'I' Then
      /*新增*/
      Attr_         := '';
      Row_.Order_No := Pkg_a.Get_Item_Value('ORDER_NO', Rowlist_);
      Select t.*
        Into Mainrow_
        From Customer_Order_Tab t
       Where t.Order_No = Row_.Order_No
         And Rownum = 1;
      Client_Sys.Add_To_Attr('CUSTOMER_PART_NO',
                             Pkg_a.Get_Item_Value('CUSTOMER_PART_NO',
                                                  Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('CUSTOMER_PART_BUY_QTY', '', Attr_);
      Client_Sys.Add_To_Attr('CUSTOMER_PART_UNIT_MEAS', '', Attr_);
      Client_Sys.Add_To_Attr('CATALOG_NO',
                             Pkg_a.Get_Item_Value('CATALOG_NO', Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('CATALOG_DESC',
                             Pkg_a.Get_Item_Value('CATALOG_DESC', Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('BUY_QTY_DUE',
                             Pkg_a.Get_Item_Value('BUY_QTY_DUE', Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('DESIRED_QTY',
                             Pkg_a.Get_Item_Value('DESIRED_QTY', Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('SALES_UNIT_MEAS',
                             Pkg_a.Get_Item_Value('SALES_UNIT_MEAS',
                                                  Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('WANTED_DELIVERY_DATE',
                             Pkg_a.Get_Item_Value('WANTED_DELIVERY_DATE',
                                                  Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('PLANNED_DELIVERY_DATE',
                             Pkg_a.Get_Item_Value('PLANNED_DELIVERY_DATE',
                                                  Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('PART_PRICE',
                             Pkg_a.Get_Item_Value('SALE_UNIT_PRICE',
                                                  Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('PRICE_SOURCE',
                             Pkg_a.Get_Item_Value('PRICE_SOURCE', Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('PRICE_SOURCE_ID',
                             Pkg_a.Get_Item_Value('PRICE_SOURCE_ID',
                                                  Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('SALE_UNIT_PRICE',
                             Pkg_a.Get_Item_Value('SALE_UNIT_PRICE',
                                                  Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('SALE_UNIT_PRICE_WITH_TAX',
                             Pkg_a.Get_Item_Value('SALE_UNIT_PRICE_WITH_TAX',
                                                  Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('PRICE_FREEZE_DB', 'FREE', Attr_);
      Client_Sys.Add_To_Attr('PRICE_UNIT_MEAS', 'pcs', Attr_);
      Client_Sys.Add_To_Attr('BASE_SALE_UNIT_PRICE',
                             Pkg_a.Get_Item_Value('SALE_UNIT_PRICE',
                                                  Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('COST',
                             Pkg_a.Get_Item_Value('COST', Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('DISCOUNT',
                             Pkg_a.Get_Item_Value('DISCOUNT', Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('ORDER_DISCOUNT', '0', Attr_);
      Client_Sys.Add_To_Attr('CLOSE_TOLERANCE', '0', Attr_);
      Client_Sys.Add_To_Attr('VAT_DB',
                             Pkg_a.Get_Item_Value('VAT_DB', Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('FEE_CODE',
                             Pkg_a.Get_Item_Value('FEE_CODE', Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('STAGED_BILLING_DB',
                             'NOT STAGED BILLING',
                             Attr_);
      Client_Sys.Add_To_Attr('WARRANTY', '', Attr_);
      Client_Sys.Add_To_Attr('DELIVERY_TYPE',
                             Mainrow_.Delivery_Type,
                             Attr_);
      --  client_sys.Add_To_Attr('DELIVERY_TERMS',mainrow_.delivery_terms,attr_);
      --  client_sys.Add_To_Attr('DELIVERY_TERMS_DESC',mainrow_.delivery_terms_desc,attr_);
    
      --raise_application_error(-20101,mainrow_.delivery_terms);
    
      Client_Sys.Add_To_Attr('DEFAULT_ADDR_FLAG_DB', 'Y', Attr_);
      Client_Sys.Add_To_Attr('ADDR_FLAG_DB', 'N', Attr_);
      Client_Sys.Add_To_Attr('SHIP_ADDR_NO', Mainrow_.Ship_Addr_No, Attr_);
      Client_Sys.Add_To_Attr('CONFIGURATION_ID', '*', Attr_);
      Client_Sys.Add_To_Attr('CONDITION_CODE', '', Attr_);
      Client_Sys.Add_To_Attr('CONSIGNMENT_STOCK_DB',
                             'NO CONSIGNMENT STOCK',
                             Attr_);
      Client_Sys.Add_To_Attr('PART_OWNERSHIP', 'Company Owned', Attr_);
      Client_Sys.Add_To_Attr('QTY_ASSIGNED', '0', Attr_);
      Client_Sys.Add_To_Attr('SUPPLY_CODE',
                             Pkg_a.Get_Item_Value('SUPPLY_CODE', Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('VENDOR_NO',
                             Pkg_a.Get_Item_Value('VENDOR_NO', Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('SUPPLY_SITE_RESERVE_TYPE',
                             'Not Allowed',
                             Attr_);
      Client_Sys.Add_To_Attr('CHARGED_ITEM_DB', 'CHARGED ITEM', Attr_);
      Client_Sys.Add_To_Attr('DOP_CONNECTION', '', Attr_);
      Client_Sys.Add_To_Attr('CREATE_SM_OBJECT_OPTION_DB',
                             'DONOTCREATESMOBJECT',
                             Attr_);
      Client_Sys.Add_To_Attr('SM_CONNECTION_DB', 'NOT CONNECTED', Attr_);
      Client_Sys.Add_To_Attr('EARLIEST_START_DATE', Sysdate, Attr_);
      Client_Sys.Add_To_Attr('CTP_PLANNED_DB', 'N', Attr_);
      Client_Sys.Add_To_Attr('EXCHANGE_ITEM_DB',
                             'ITEM NOT EXCHANGED',
                             Attr_);
      Client_Sys.Add_To_Attr('CUSTOMER_PART_CONV_FACTOR', '', Attr_);
      Client_Sys.Add_To_Attr('ORDER_NO', Row_.Order_No, Attr_);
      -- client_sys.Add_To_Attr('LINE_ITEM_NO',pkg_a.Get_Item_Value('LINE_ITEM_NO',ROWLIST_),attr_ );
      Client_Sys.Add_To_Attr('CATALOG_TYPE',
                             Pkg_a.Get_Item_Value('CATALOG_TYPE', Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('CONTRACT',
                             Pkg_a.Get_Item_Value('CONTRACT', Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('PART_NO',
                             Pkg_a.Get_Item_Value('CATALOG_NO', Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('CURRENCY_RATE',
                             Pkg_a.Get_Item_Value('CURRENCY_RATE', Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('PRICE_CONV_FACTOR', '1', Attr_);
      Client_Sys.Add_To_Attr('CONV_FACTOR', '1', Attr_);
      Client_Sys.Add_To_Attr('QTY_SHIPPED', '0', Attr_);
      Client_Sys.Add_To_Attr('REVISED_QTY_DUE',
                             Pkg_a.Get_Item_Value('BUY_QTY_DUE', Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('PURCHASE_PART_NO',
                             Pkg_a.Get_Item_Value('CATALOG_NO', Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('RELEASE_PLANNING_DB', 'NOTRELEASED', Attr_);
    
      Client_Sys.Add_To_Attr('LINE_NO',
                             Pkg_a.Get_Item_Value('LINE_NO', Rowlist_),
                             Attr_);
      Client_Sys.Add_To_Attr('REL_NO',
                             Pkg_a.Get_Item_Value('REL_NO', Rowlist_),
                             Attr_);
    
      Row_.Line_Item_No := Pkg_a.Get_Item_Value('LINE_ITEM_NO', Rowlist_);
      --包装结构
    
      If To_Number(Nvl(Row_.Line_Item_No, '0')) > 0 Then
      
        Row_.Line_No := Pkg_a.Get_Item_Value('LINE_NO', Rowlist_);
        Row_.Rel_No  := Pkg_a.Get_Item_Value('REL_NO', Rowlist_);
        Select Max(Line_Item_No)
          Into Row_.Line_Item_No
          From Customer_Order_Line_Tab t
         Where t.Order_No = Row_.Order_No
           And t.Line_No = Row_.Line_No
           And t.Rel_No = Row_.Rel_No;
        Row_.Line_Item_No := To_Number(Nvl(Row_.Line_Item_No, '0')) + 1;
        --   raise_application_error(-20101, row_.LINE_ITEM_NO );
        Client_Sys.Add_To_Attr('LINE_ITEM_NO', Row_.Line_Item_No, Attr_);
      Else
        Client_Sys.Add_To_Attr('LINE_ITEM_NO', '0', Attr_);
      End If;
      Action_ := 'DO';
      Customer_Order_Line_Api.New__(Info_,
                                    Objid_,
                                    Objversion_,
                                    Attr_,
                                    Action_);
      Pkg_a.Setsuccess(A311_Key_, 'BL_V_CUSTOMER_ORDER_LINE', Objid_);
    
      Row0_.Order_No      := Row_.Order_No;
      Row0_.Line_No       := Client_Sys.Get_Item_Value('LINE_NO', Attr_);
      Row0_.Rel_No        := Client_Sys.Get_Item_Value('REL_NO', Attr_);
      Row0_.Line_Item_No  := Client_Sys.Get_Item_Value('LINE_ITEM_NO',
                                                       Attr_);
      Row0_.Bld001_Pack   := Pkg_a.Get_Item_Value('BLD001_PACK', Rowlist_);
      Row0_.Po_Identifier := Pkg_a.Get_Item_Value('PO_IDENTIFIER', Rowlist_);
    
      Usermodify__(Row0_, User_Id_);
      Return;
    End If;
    If Doaction_ = 'M' Then
      /*修改*/
      Open Cur_ For
        Select t.*
          From Bl_v_Customer_Order_Line t
         Where t.Objid = Row_.Objid;
      Fetch Cur_
        Into Row_;
      If Cur_%Notfound Then
      
        Raise_Application_Error(-20101, '错误的rowid');
        Return;
      End If;
      Close Cur_;
      /*获取有几列发生了修改*/
    
      Data_      := Rowlist_;
      Pos_       := Instr(Data_, Index_);
      i          := i + 1;
      Mysql_     := 'update bl_customer_order_line  set  ';
      Ifmychange := '0';
      Loop
        Exit When Nvl(Pos_, 0) <= 0;
        Exit When i > 300;
        v_    := Substr(Data_, 1, Pos_ - 1);
        Data_ := Substr(Data_, Pos_ + 1);
        Pos_  := Instr(Data_, Index_);
      
        Pos1_      := Instr(v_, '|');
        Column_Id_ := Substr(v_, 1, Pos1_ - 1);
        If Column_Id_ = 'BLD001_PACK' Or Column_Id_ = 'PO_IDENTIFIER' Then
          Ifmychange := '1';
          v_         := Substr(v_, Pos1_ + 1);
          Mysql_     := Mysql_ || ' ' || Column_Id_ || '=''' || v_ || ''',';
        
        Else
          If Column_Id_ <> 'OBJID' And Column_Id_ <> 'DOACTION' And
             Column_Id_ <> 'QTY_CON' And Length(Nvl(Column_Id_, '')) > 0 Then
            v_ := Substr(v_, Pos1_ + 1);
            Client_Sys.Add_To_Attr(Column_Id_, v_, Attr_);
            i := i + 1;
          End If;
        End If;
      End Loop;
    
      Action_ := 'DO';
      Customer_Order_Line_Api.Modify__(Info_,
                                       Row_.Objid,
                                       Row_.Objversion,
                                       Attr_,
                                       Action_);
      --用户自定义列
      If Ifmychange = '1' Then
      
        Row0_.Order_No      := Row_.Order_No;
        Row0_.Line_No       := Row_.Line_No;
        Row0_.Rel_No        := Row_.Rel_No;
        Row0_.Line_Item_No  := Row_.Line_Item_No;
        Row0_.Bld001_Pack   := Pkg_a.Get_Item_Value('BLD001_PACK', Rowlist_);
        Row0_.Po_Identifier := Pkg_a.Get_Item_Value('PO_IDENTIFIER',
                                                    Rowlist_);
      
        Usermodify__(Row0_, User_Id_);
      
      End If;
      Pkg_a.Setsuccess(A311_Key_, 'BL_V_CUSTOMER_ORDER_LINE', Row_.Objid);
    
      Return;
    End If;
    If Doaction_ = 'D' Then
      /*删除*/
      Open Cur_ For
        Select t.*
          From Bl_v_Customer_Order_Line t
         Where t.Objid = Row_.Objid;
      Fetch Cur_
        Into Row_;
      If Cur_%Notfound Then
        Raise_Application_Error(-20101, '错误的rowid');
        Return;
      End If;
      Close Cur_;
      Action_ := 'DO';
      Customer_Order_Line_Api.Remove__(Info_,
                                       Row_.Objid,
                                       Row_.Objversion,
                                       Action_);
      Pkg_a.Setsuccess(A311_Key_, 'BL_V_CUSTOMER_ORDER_LINE', Row_.Objid);
    
      Delete From Bl_Customer_Order_Line t
       Where t.Order_No = Row_.Order_No
         And t.Line_No = Row_.Line_No
         And t.Rel_No = Row_.Rel_No
         And t.Line_Item_No = Row_.Line_Item_No;
      Return;
    End If;
  End;

  Procedure Remove__(Rowlist_  Varchar2,
                     User_Id_  Varchar2,
                     A311_Key_ Varchar2) Is
  Begin
    Return;
  End;
  Procedure Set_Cancel_Reason(Rowlist_  Varchar2,
                              User_Id_  Varchar2,
                              A311_Key_ Varchar2) Is
    Row_        Bl_v_Customer_Order_Line%Rowtype;
    Cur_        t_Cursor;
    Co_Row_     Customer_Order_Pur_Order_Tab%Rowtype;
    A311_       A311%Rowtype;
    Po_Rowlist  Varchar2(4000);
    Head_State_ Varchar2(4000);
    Line_State_ Varchar2(4000);
    Info_       Varchar2(4000);
    Co_Row_Tab  Customer_Order_Line%Rowtype;
  Begin
    Row_.Objid        := Pkg_a.Get_Item_Value('OBJID', Rowlist_);
    Row_.Order_No     := Pkg_a.Get_Item_Value('ORDER_NO', Rowlist_);
    Row_.Line_No      := Pkg_a.Get_Item_Value('LINE_NO', Rowlist_);
    Row_.Rel_No       := Pkg_a.Get_Item_Value('REL_NO', Rowlist_);
    Row_.Line_Item_No := Pkg_a.Get_Item_Value('LINE_ITEM_NO', Rowlist_);
    Open Cur_ For
      Select t.*
        From Bl_v_Customer_Order_Line t
       Where t.Objid = Row_.Objid;
    Fetch Cur_
      Into Row_;
    If Cur_%Notfound Then
      Close Cur_;
      Pkg_a.Setfailed(A311_Key_, 'BL_V_CUSTOMER_ORDER_LINE', Row_.Objid);
      Raise_Application_Error(-20101, '错误的rowid');
      Return;
    End If;
    Close Cur_;
    Row_.Cancel_Reason := Pkg_a.Get_Item_Value('CANCEL_REASON', Rowlist_);
    Customer_Order_Line_Api.Set_Cancel_Reason(Row_.Order_No,
                                              Row_.Line_No,
                                              Row_.Rel_No,
                                              Row_.Line_Item_No,
                                              Row_.Cancel_Reason);
  
    --取消交货计划的订单行
  
    Update Bl_Delivery_Plan_Detial t
       Set State       = '3',
           t.Remark    = t.Remark || ' -- 订单行被' || User_Id_ || '取消',
           t.Modi_User = User_Id_,
           t.Modi_Date = Sysdate
     Where t.Order_No = Row_.Order_No
       And t.Line_No = Row_.Line_No
       And t.Rel_No = Row_.Rel_No
       And t.Line_Item_No = Row_.Line_Item_No;
  
    ---取消 备货单 行 --
    Update Bl_Pldtl t
       Set Flag = '3'
     Where t.Order_No = Row_.Order_No
       And t.Line_No = Row_.Line_No
       And t.Rel_No = Row_.Rel_No
       And t.Line_Item_No = Row_.Line_Item_No;
  
    -- Customer_Order_Line_API.Set_Cancelled(ROW_.ORDER_NO,ROW_.LINE_NO,ROW_.REL_NO,ROW_.LINE_ITEM_NO);
    Cancel_Customer_Order_Api.Cancel_Order_Line__(Head_State_,
                                                  Line_State_,
                                                  Info_,
                                                  Row_.Order_No,
                                                  Row_.Line_No,
                                                  Row_.Rel_No,
                                                  Row_.Line_Item_No,
                                                  'FALSE',
                                                  'FALSE');
  
    --判断是否全部取消完
    Open Cur_ For
      Select t.*
        From Customer_Order_Line t
       Where t.Order_No = Row_.Order_No
         And t.Objstate != 'Cancelled';
    Fetch Cur_
      Into Co_Row_Tab;
    If Cur_%Notfound Then
      Close Cur_;
      Pkg_a.Setsuccess(A311_Key_, 'BL_V_CUSTOMER_ORDER_LINE', Row_.Objid);
      Pkg_a.Setmsg(A311_Key_,
                   '',
                   '订单' || Row_.Order_No || '明细行第' || Row_.Line_No ||
                   '行取消成功');
    
      A311_.A311_Id    := 'BL_Customer_Order_Line_Api.set_cancel_reason';
      A311_.Enter_User := User_Id_;
      A311_.A014_Id    := 'A014_ID=PO_Cancle';
      A311_.Table_Id   := 'BL_V_CUSTOMER_ORDER';
      Pkg_a.Beginlog(A311_);
      Po_Rowlist := '';
      Select t.Objid
        Into A311_.Table_Objid
        From Customer_Order t
       Where t.Order_No = Row_.Order_No
         And Rownum = 1;
    
      Pkg_a.Set_Item_Value('OBJID', A311_.Table_Objid, Po_Rowlist);
      Pkg_a.Set_Item_Value('CANCEL_REASON', Row_.Cancel_Reason, Po_Rowlist);
      Bl_Customer_Order_Api.Set_Cancel_Reason(Po_Rowlist,
                                              User_Id_,
                                              A311_Key_);
      Return;
    End If;
    Close Cur_;
  
    /*取消当前行对应的所有的采购订单 和 销售订单 */
    Open Cur_ For
      Select T2.*
        From Customer_Order_Pur_Order_Tab T2
       Where T2.Oe_Order_No = Row_.Order_No
         And T2.Oe_Line_No = Row_.Line_No
         And T2.Oe_Rel_No = Row_.Rel_No
         And T2.Oe_Line_Item_No = Row_.Line_Item_No
         And T2.Purchase_Type = 'O';
  
    Fetch Cur_
      Into Co_Row_;
    If (Cur_%Found) Then
      Close Cur_;
      --取消对应的采购订单
      A311_.A311_Id    := 'BL_Customer_Order_Line_Api.set_cancel_reason';
      A311_.Enter_User := User_Id_;
      A311_.A014_Id    := 'A014_ID=POLine_Cancle';
      A311_.Table_Id   := 'BL_V_PURCHASE_ORDER_LINE_PART';
      Open Cur_ For
        Select t.Rowid
          From Purchase_Order_Line_Tab t
         Where t.Order_No = Co_Row_.Po_Order_No
           And t.Line_No = Co_Row_.Po_Line_No
           And t.Release_No = Co_Row_.Po_Rel_No;
      Fetch Cur_
        Into A311_.Table_Objid;
      If Cur_%Found Then
        Close Cur_;
        Pkg_a.Beginlog(A311_);
        Po_Rowlist := '';
        Pkg_a.Set_Item_Value('OBJID', A311_.Table_Objid, Po_Rowlist);
        Pkg_a.Set_Item_Value('CANCEL_REASON',
                             Row_.Cancel_Reason,
                             Po_Rowlist);
        Bl_Po_Line_Part_Api.Set_Cancel_Reason(Po_Rowlist,
                                              User_Id_,
                                              A311_.A311_Key);
      Else
        Close Cur_;
      End If;
    Else
      Close Cur_;
    End If;
  
    /*
        return  '[HTTP_URL]/showform/MainForm.aspx?option=M&A002KEY=4002&key=' || row_.po_order_no  ;
    
     end if;
      return  '[HTTP_URL]/showform/MainForm.aspx?option=M&A002KEY=4001&key=' || row_.po_order_no  ;
    
     end ;
    */
  
    Pkg_a.Setsuccess(A311_Key_, 'BL_V_CUSTOMER_ORDER_LINE', Row_.Objid);
    Pkg_a.Setmsg(A311_Key_,
                 '',
                 '订单' || Row_.Order_No || '明细行第' || Row_.Line_No || '行取消成功');
    Return;
  End;
  Procedure Itemchange__(Column_Id_   Varchar2,
                         Mainrowlist_ Varchar2,
                         Rowlist_     Varchar2,
                         User_Id_     Varchar2,
                         Outrowlist_  Out Varchar2) Is
    Attr_       Varchar2(4000);
    Info_       Varchar2(4000);
    Objid_      Varchar2(4000);
    Objversion_ Varchar2(4000);
    Action_     Varchar2(100);
    Attr_Out    Varchar2(4000);
    Row_        Bl_v_Customer_Order_Line%Rowtype;
    Main_Row_   Bl_v_Customer_Order%Rowtype;
    Sprec_      Ifsapp.Sales_Part_Api.Public_Rec;
    Agreement_  Agreement_Sales_Part_Deal%Rowtype;
    Percent_    Number;
    Cur_        t_Cursor;
    Pmainrow_   Bl_v_Cust_Order_Line_Pack%Rowtype;
  Begin
  
    If Column_Id_ = 'CATALOG_NO' Or Column_Id_ = 'CUSTOMER_PART_NO' Then
      Main_Row_.Contract := Pkg_a.Get_Item_Value('CONTRACT', Mainrowlist_);
      Main_Row_.Order_No := Pkg_a.Get_Item_Value('ORDER_NO', Mainrowlist_);
      If Column_Id_ = 'CUSTOMER_PART_NO' Then
        Row_.Customer_Part_No := Pkg_a.Get_Item_Value('CUSTOMER_PART_NO',
                                                      Rowlist_);
        Customer_Order_Line_Api.Get_Cust_Part_No_Defaults__(Info_,
                                                            Attr_,
                                                            Main_Row_.Order_No,
                                                            Row_.Customer_Part_No);
        Attr_Out        := Pkg_a.Get_Attr_By_Ifs(Attr_);
        Row_.Catalog_No := Pkg_a.Get_Item_Value('CATALOG_NO', Attr_Out);
      Else
        Row_.Catalog_No := Pkg_a.Get_Item_Value('CATALOG_NO', Rowlist_);
        Customer_Order_Line_Api.Get_Line_Defaults__(Info_,
                                                    Attr_,
                                                    Row_.Catalog_No,
                                                    Main_Row_.Order_No);
        Attr_Out := Pkg_a.Get_Attr_By_Ifs(Attr_);
      End If;
    
      Row_.Buy_Qty_Due := Pkg_a.Get_Item_Value('BUY_QTY_DUE', Rowlist_);
      Customer_Order_Pricing_Api.Get_Order_Line_Price_Info(Sale_Unit_Price_      => Row_.Sale_Unit_Price,
                                                           Base_Sale_Unit_Price_ => Row_.Sale_Unit_Price_With_Tax,
                                                           Currency_Rate_        => Row_.Currency_Rate,
                                                           Discount_             => Row_.Discount,
                                                           Order_No_             => Main_Row_.Order_No,
                                                           Catalog_No_           => Row_.Catalog_No,
                                                           Buy_Qty_Due_          => Row_.Buy_Qty_Due,
                                                           Price_List_No_        => Null,
                                                           Condition_Code_       => Null);
      Pkg_a.Set_Item_Value('SALE_UNIT_PRICE',
                           Row_.Sale_Unit_Price,
                           Attr_Out);
      Pkg_a.Set_Item_Value('SALE_UNIT_PRICE_WITH_TAX',
                           Row_.Sale_Unit_Price_With_Tax,
                           Attr_Out);
      Pkg_a.Set_Item_Value('CURRENCY_RATE', Row_.Currency_Rate, Attr_Out);
      Pkg_a.Set_Item_Value('DISCOUNT', Row_.Discount, Attr_Out);
    
      Pkg_a.Set_Item_Value('BUY_QTY_DUE', Row_.Buy_Qty_Due, Attr_Out);
    
      Sprec_ := Ifsapp.Sales_Part_Api.Get(Main_Row_.Contract,
                                          Row_.Catalog_No);
    
      --
      -- IFSAPP.STATUTORY_FEE_API.Get_Percentage(
      -- IFSAPP.Site_API.Get_Company(:i_hWndFrame.tbwCustomerOrderCharge.colsContract),
      --  :i_hWndFrame.tbwCustomerOrderCharge.colsFeeCode);
      Row_.Fee_Code := Ifsapp.Sales_Part_Api.Get_Fee_Code(Main_Row_.Contract,
                                                          Row_.Catalog_No); --sprec_.FEE_CODE;
      Pkg_a.Set_Item_Value('FEE_CODE', Row_.Fee_Code, Attr_Out);
      If Nvl(Row_.Fee_Code, 'N') <> 'N' Then
        Row_.Vat_Db := 'Y';
      Else
        Row_.Vat_Db := 'N';
      End If;
      Row_.Vat_Db := 'Y';
      Pkg_a.Set_Item_Value('VAT_DB', Row_.Vat_Db, Attr_Out);
    
      --row_.PRICE_SOURCE_ID
      --row_.PRICE_SOURCE
      --pkg_a.Set_Item_Value()
      --协议价格
      Main_Row_.Agreement_Id := Pkg_a.Get_Item_Value('AGREEMENT_ID',
                                                     Mainrowlist_);
      Open Cur_ For
        Select *
          From Agreement_Sales_Part_Deal t
         Where t.Contract = Main_Row_.Contract
           And t.Catalog_No = Row_.Catalog_No
           And t.Agreement_Id = Main_Row_.Agreement_Id;
      Fetch Cur_
        Into Agreement_;
      If Cur_%Found Then
        Row_.Price_Source_Id := Main_Row_.Agreement_Id;
        Row_.Price_Source    := 'Agreement';
      Else
        Row_.Price_Source_Id := '';
        Row_.Price_Source    := 'Base';
      End If;
    
      Close Cur_;
      -- row_.PRICE_SOURCE_ID  := main_row_.AGREEMENT_ID;
      Pkg_a.Set_Item_Value('PRICE_SOURCE_ID',
                           Row_.Price_Source_Id,
                           Attr_Out);
      Pkg_a.Set_Item_Value('PRICE_SOURCE', Row_.Price_Source, Attr_Out);
      --
      --税率
      --statutory_fee_api.get_fee_percent(percent_,IFSAPP.SITE_API.Get_Company( main_row_.CONTRACT),   row_.FEE_CODE,sysdate);
    
      -- row_.SALE_UNIT_PRICE :=  row_.SALE_UNIT_PRICE_WITH_TAX  / ( 1 +  percent_ /100) ;
    
      --  pkg_a.Set_Item_Value('SALE_UNIT_PRICE',row_.SALE_UNIT_PRICE,attr_out);
    
      ---读取 表头的协议号 如果存在
    
      --jia
    
      /*
      Customer_Order_Line_API.Get_Line_Defaults__(:i_hWndFrame.tbwCustomerOrderLine.lsInfo,
                                                       :i_hWndFrame.tbwCustomerOrderLine.lsAttr,
                                                       :i_hWndFrame.tbwCustomerOrderLine.colsCatalogNo,
                                                       :i_hWndFrame.tbwCustomerOrderLine.colsOrderNo);
      
      */
    
      /* row_.SALES_UNIT_MEAS := sprec_.price_unit_meas;
      
       pkg_a.Set_Item_Value('SALES_UNIT_MEAS',row_.SALES_UNIT_MEAS,attr_out);
      
       row_.CATALOG_DESC := sprec_.catalog_desc;
       pkg_a.Set_Item_Value('CATALOG_DESC',row_.CATALOG_DESC,attr_out);
      
       pkg_a.Set_Item_Value('SALE_UNIT_PRICE',row_.SALE_UNIT_PRICE,attr_out);
       row_.VAT_DB := sprec_.FEE_CODE;
       pkg_a.Set_Item_Value('VAT_DB',row_.VAT_DB,attr_out);
      
      */
    
      /*
        row_.SALE_UNIT_PRICE :=
      
      :i_hWndFrame.tbwCustomerOrderLine.nSuggestedExists         := IFSAPP.Suggested_Sales_Part_API.Suggested_Sales_Part_Exists(:i_hWndParent.frmCustomerOrder.dfsContract,
                                                                                                                                :i_hWndFrame.tbwCustomerOrderLine.colsCatalogNo);
      :i_hWndFrame.tbwCustomerOrderLine.colsSalesPriceGroupId    := sprec_.sales_price_group_id;
      :i_hWndFrame.tbwCustomerOrderLine.colsSerialTrackingCodeDb := IFSAPP.Part_Catalog_API.Get_Serial_Tracking_Code_Db(sprec_.part_no);
      :i_hWndFrame.tbwCustomerOrderLine.lsTaxRegimeDb            := IFSAPP.Tax_Regime_API.Encode(IFSAPP.customer_info_vat_api.get_tax_regime(:i_hWndParent.frmCustomerOrder.dfsCustomerNo,
      
          */
    
    End If;
    If Column_Id_ = 'QTY_CON' Then
      Pmainrow_.Buy_Qty_Due := Pkg_a.Get_Item_Value('BUY_QTY_DUE',
                                                    Mainrowlist_);
      Pkg_a.Set_Item_Value('BUY_QTY_DUE',
                           To_Number(Pkg_a.Get_Item_Value('QTY_CON',
                                                          Rowlist_)) *
                           Pmainrow_.Buy_Qty_Due,
                           Attr_Out);
      Pkg_a.Set_Item_Value('DESIRED_QTY',
                           To_Number(Pkg_a.Get_Item_Value('QTY_CON',
                                                          Rowlist_)) *
                           Pmainrow_.Buy_Qty_Due,
                           Attr_Out);
    End If;
  
    If Column_Id_ = 'BUY_QTY_DUE' Then
      Row_.Desired_Qty := Pkg_a.Get_Item_Value('DESIRED_QTY', Rowlist_);
    
      If Nvl(Row_.Desired_Qty, '0') = '0' Then
        Row_.Desired_Qty := Pkg_a.Get_Item_Value('BUY_QTY_DUE', Rowlist_);
        Pkg_a.Set_Item_Value('DESIRED_QTY', Row_.Desired_Qty, Attr_Out);
      
      End If;
      Pmainrow_.Buy_Qty_Due := Pkg_a.Get_Item_Value('BUY_QTY_DUE',
                                                    Mainrowlist_);
      Row_.Buy_Qty_Due      := Pkg_a.Get_Item_Value('BUY_QTY_DUE', Rowlist_);
      If To_Number(Nvl(Pmainrow_.Buy_Qty_Due, '0')) > 0 Then
        Pkg_a.Set_Item_Value('QTY_CON',
                             Round(Row_.Buy_Qty_Due / Pmainrow_.Buy_Qty_Due,
                                   4),
                             Attr_Out);
      
      End If;
    
      --DESIRED_QTY
    End If;
    If Column_Id_ = 'FEE_CODE' Then
      Row_.Fee_Code      := Pkg_a.Get_Item_Value('FEE_CODE', Rowlist_);
      Main_Row_.Contract := Pkg_a.Get_Item_Value('CONTRACT', Mainrowlist_);
      Statutory_Fee_Api.Get_Fee_Percent(Percent_,
                                        Ifsapp.Site_Api.Get_Company(Main_Row_.Contract),
                                        Row_.Fee_Code,
                                        Sysdate);
      Attr_Out                      := Null;
      Row_.Sale_Unit_Price          := Pkg_a.Get_Item_Value('SALE_UNIT_PRICE',
                                                            Rowlist_);
      Row_.Sale_Unit_Price_With_Tax := (100 + Percent_) *
                                       Row_.Sale_Unit_Price / 100;
      Pkg_a.Set_Item_Value('SALE_UNIT_PRICE_WITH_TAX',
                           Row_.Sale_Unit_Price_With_Tax,
                           Attr_Out);
      Pkg_a.Set_Item_Value('VAT_DB', 'Y', Attr_Out);
    End If;
  
    If Column_Id_ = 'SUPPLY_CODE' Then
      Row_.Supply_Code := Pkg_a.Get_Item_Value('SUPPLY_CODE', Rowlist_);
    
      If Nvl(Row_.Supply_Code, '0') = 'Invent Order' Or
         Nvl(Row_.Supply_Code, '0') = 'Pkg' Then
        Pkg_a.Set_Item_Value('SUPPLY_SITE', '', Attr_Out);
        Pkg_a.Set_Item_Value('VENDOR_NO', '', Attr_Out);
      Else
        Row_.Catalog_No := Pkg_a.Get_Item_Value('CATALOG_NO', Rowlist_);
        Row_.Contract   := Pkg_a.Get_Item_Value('CONTRACT', Mainrowlist_);
        --IO,IPD,PKG,PT,IPT,NO,PD,SO
        Open Cur_ For
          Select t.Shortid
            From Bl_v_Co_Supply_Code t
           Where t.Id = Row_.Supply_Code;
        Fetch Cur_
          Into Row_.Supply_Code;
        Close Cur_;
      
        Customer_Order_Line_Api.Retrieve_Default_Vendor__(Vendor_No_   => Row_.Vendor_No,
                                                          Contract_    => Row_.Contract,
                                                          Part_No_     => Row_.Catalog_No,
                                                          Supply_Code_ => Row_.Supply_Code);
        Pkg_a.Set_Item_Value('VENDOR_NO', Row_.Vendor_No, Attr_Out);
        Row_.Supply_Site := Supplier_Api.Get_Acquisition_Site(Vendor_No_ => Row_.Vendor_No);
        Pkg_a.Set_Item_Value('SUPPLY_SITE', Row_.Supply_Site, Attr_Out);
      
      End If;
    
    End If;
    If Column_Id_ = 'VENDOR_NO' Then
      Row_.Vendor_No   := Pkg_a.Get_Item_Value('VENDOR_NO', Rowlist_);
      Row_.Supply_Site := Supplier_Api.Get_Acquisition_Site(Vendor_No_ => Row_.Vendor_No);
      Pkg_a.Set_Item_Value('SUPPLY_SITE', Row_.Supply_Site, Attr_Out);
    
    End If;
  
    Outrowlist_ := Attr_Out;
  
    --  pkg_a.setResult(A311_KEY_,attr_out);
  End;
  /*
  PROCEDURE ITEMCHANGE__(COLUMN_ID_ VARCHAR2 , ROWLIST_ VARCHAR2,USER_ID_ VARCHAR2,A311_KEY_ VARCHAR2)
  IS
  attr_out varchar2(4000);
  BEGIN
     ITEMCHANGE__( COLUMN_ID_,'',ROWLIST_,USER_ID_,attr_out);
     pkg_a.setResult(A311_KEY_,attr_out);
     RETURN;
  END;
  */
  --BL_CUSTOMER_ORDER_LINE
  Procedure Usermodify__(Row_     In Bl_Customer_Order_Line%Rowtype,
                         User_Id_ In Varchar2) Is
    Cur_  t_Cursor;
    Row0_ Bl_Customer_Order_Line%Rowtype;
  
  Begin
    Open Cur_ For
      Select t.*
        From Bl_Customer_Order_Line t
       Where t.Order_No = Row_.Order_No
         And t.Line_No = Row_.Line_No
         And t.Rel_No = Row_.Rel_No
         And t.Line_Item_No = Row_.Line_Item_No;
    Fetch Cur_
      Into Row0_;
    If Cur_%Notfound Then
      Insert Into Bl_Customer_Order_Line
        (Order_No,
         Line_No,
         Rel_No,
         Line_Item_No,
         Enter_Date,
         Enter_User,
         Bld001_Pack,
         Po_Identifier,
         Line_Key)
        Select Row_.Order_No,
               Row_.Line_No,
               Row_.Rel_No,
               Row_.Line_Item_No,
               Sysdate,
               User_Id_,
               Row_.Bld001_Pack,
               Row_.Po_Identifier,
               Row_.Order_No || '-' || Row_.Line_No || '-' || Row_.Rel_No || '-' ||
               Row_.Line_Item_No
          From Dual;
    Else
      Update Bl_Customer_Order_Line t
         Set Bld001_Pack   = Nvl(Row_.Bld001_Pack, Bld001_Pack),
             Po_Identifier = Nvl(Row_.Po_Identifier, Po_Identifier),
             Modi_Date     = Sysdate,
             Modi_User     = User_Id_
       Where t.Order_No = Row_.Order_No
         And t.Line_No = Row_.Line_No
         And t.Rel_No = Row_.Rel_No
         And t.Line_Item_No = Row_.Line_Item_No;
    End If;
    Close Cur_;
  
  End;

  Function Checkuseable(Doaction_  In Varchar2,
                        Column_Id_ In Varchar,
                        Rowlist_   In Varchar2) Return Varchar2 Is
    Row_ Bl_v_Customer_Order_Line%Rowtype;
  Begin
    If Doaction_ = 'M' Then
      Row_.Objid := Pkg_a.Get_Item_Value('OBJID', Rowlist_);
      Row_.State := Pkg_a.Get_Item_Value('STATE', Rowlist_); --  Delivered
      If Row_.Objid = '' Or Row_.Objid = 'NULL' Then
        If Column_Id_ = 'SALE_UNIT_PRICE' Then
          Row_.Price_With_Tax := Pkg_a.Get_Item_Value('PRICE_WITH_TAX',
                                                      Rowlist_);
          If Row_.Price_With_Tax = 'FALSE' Then
            Return '1';
          Else
            Return '0';
          End If;
        End If;
        If Column_Id_ = 'SALE_UNIT_PRICE_WITH_TAX' Then
          Row_.Price_With_Tax := Pkg_a.Get_Item_Value('PRICE_WITH_TAX',
                                                      Rowlist_);
          If Row_.Price_With_Tax = 'TRUE' Then
            Return '1';
          Else
            Return '0';
          End If;
        End If;
        Return '1';
      End If;
      If Row_.State <> 'Invoiced/Closed' And Row_.State <> 'Cancelled' Then
        -- 'Delivered' or row_.STATE ='Planned')   then
        If Column_Id_ = 'CATALOG_NO' Or Column_Id_ = 'CUSTOMER_PART_NO' Or
           Column_Id_ = 'CONTRACT' Or Column_Id_ = 'ORDER_ID' Or
           Column_Id_ = 'DATE_ENTERED' Or Column_Id_ = 'PRICE_WITH_TAX' Or
           Column_Id_ = 'PRICE_SOURCE_ID' Or Column_Id_ = 'PRICE_SOURCE' Then
          Return '0';
        End If;
      
        If Row_.State = 'Released' Then
        
          Row_.Line_Item_No := Pkg_a.Get_Item_Value('LINE_ITEM_NO',
                                                    Rowlist_);
          Row_.Mainstate    := Pkg_a.Get_Item_Value('MAINSTATE', Rowlist_);
          If (Column_Id_ = 'WANTED_DELIVERY_DATE' Or
             Column_Id_ = 'BUY_QTY_DUE' Or Column_Id_ = 'DESIRED_QTY' Or
             Column_Id_ = 'LINE_NO' Or Column_Id_ = 'REL_NO' Or
             Column_Id_ = 'SUPPLY_SITE' Or Column_Id_ = 'SUPPLY_CODE' Or
             Column_Id_ = 'VENDOR_NO' Or Column_Id_ = 'PO_IDENTIFIER' Or
             Column_Id_ = 'BLD001_PACK') Then
            If Row_.Line_Item_No <= 0 Then
              If (Column_Id_ = 'BUY_QTY_DUE' Or Column_Id_ = 'SUPPLY_SITE' Or
                 Column_Id_ = 'SUPPLY_CODE' Or Column_Id_ = 'VENDOR_NO' Or
                 Column_Id_ = 'PO_IDENTIFIER' Or
                 Column_Id_ = 'BLD001_PACK') And Row_.Mainstate = 'Planned' Then
                Return '1';
              End If;
            End If;
            If Row_.Line_Item_No > 0 Then
            
              Return '1';
            End If;
            Return '0';
          End If;
          --if  row_.LINE_ITEM_NO  > 0 and ()
        
          -- return '0' ;
        
          --  end if ;
        End If;
      
        If Column_Id_ = 'SALE_UNIT_PRICE' Then
          Row_.Price_With_Tax := Pkg_a.Get_Item_Value('PRICE_WITH_TAX',
                                                      Rowlist_);
          If Row_.Price_With_Tax = 'FALSE' Then
            Return '1';
          Else
            Return '0';
          End If;
        End If;
        If Column_Id_ = 'SALE_UNIT_PRICE_WITH_TAX' Then
          Row_.Price_With_Tax := Pkg_a.Get_Item_Value('PRICE_WITH_TAX',
                                                      Rowlist_);
          If Row_.Price_With_Tax = 'TRUE' Then
            Return '1';
          Else
            Return '0';
          End If;
        End If;
        Return '1';
      Else
        Return '0';
      End If;
    
    End If;
  
    Return '1';
  End;
  ----检查添加行 删除行
  Function Checkbutton__(Dotype_   In Varchar2,
                         Order_No_ In Varchar2,
                         User_Id_  In Varchar2) Return Varchar2 Is
    Cur_ t_Cursor;
    Row_ Bl_v_Customer_Order%Rowtype;
  Begin
    If Instr(Order_No_, '-') > 0 Then
      -- BL_V_CUST_ORDER_LINE_PACK
    
      Return '1';
    End If;
    Open Cur_ For
      Select t.* From Bl_v_Customer_Order t Where t.Order_No = Order_No_;
    Fetch Cur_
      Into Row_;
    If Cur_%Notfound Then
      Close Cur_;
      Return '0';
    End If;
    Close Cur_;
    If Row_.Blorder_Id = '5' Then
      Return '0';
    End If;
  
    If Row_.Objstate <> 'Planned' Then
      Return '0';
    End If;
  
    /*  if dotype_ = 'ADD_ROW'  then
        return  '0';
     end if ;
    if dotype_ = 'DEL_ROW'  then
        return  '0';
     end if ;  */
    Return '1';
  End;
  --获取交货计划数量
  Function Get_Plan_Qty__(Order_No_     In Varchar2,
                          Line_No_      In Varchar2,
                          Rel_No_       Varchar2,
                          Line_Item_No_ Number) Return Number Is
    Cur_    t_Cursor;
    Sum_Qty Number;
  Begin
    --计划,下达,确认,失效,差异发货,关闭,取消
    -- 0    1    2    3    4        5    6
    Open Cur_ For
      Select Sum(t.Qty_Delived)
        From Bl_Delivery_Plan_Detial t
       Where t.f_Order_No = Order_No_
         And t.f_Line_No = Line_No_
         And t.f_Rel_No = Rel_No_
         And t.f_Line_Item_No = Line_Item_No_
         And t.State <> '3';
    Fetch Cur_
      Into Sum_Qty;
    Close Cur_;
    Return Nvl(Sum_Qty, 0);
  End;
  Procedure Get_Record_By_Line_Key(Line_Key_ In Varchar2,
                                   Record_   Out Bl_v_Customer_Order_Line%Rowtype) Is
    Datalist_ Dbms_Sql.Varchar2_Table;
    Cur_      t_Cursor;
  Begin
    Datalist_ := Pkg_a.Get_Str_List_By_Index(Line_Key_, '-');
    If Nvl(Datalist_(4), '-') = '-' Then
      Datalist_(4) := Nvl(Datalist_(4), '-') || Datalist_(5);
    End If;
    Open Cur_ For
      Select t.*
        From Bl_v_Customer_Order_Line t
       Where t.Order_No = Datalist_(1)
         And t.Line_No = Datalist_(2)
         And t.Rel_No = Datalist_(3)
         And t.Line_Item_No = Datalist_(4);
    Fetch Cur_
      Into Record_;
    Close Cur_;
  Exception
    When Others Then
      Return;
    
  End;

  Function Get_Objid_By_Line_Key(Line_Key_ In Varchar2) Return Varchar2 Is
    Objid_    Varchar2(1000);
    Datalist_ Dbms_Sql.Varchar2_Table;
    Cur_      t_Cursor;
  Begin
    Datalist_ := Pkg_a.Get_Str_List_By_Index(Line_Key_, '-');
    If Nvl(Datalist_(4), '-') = '-' Then
      Datalist_(4) := Nvl(Datalist_(4), '-') || Datalist_(5);
    End If;
    Open Cur_ For
      Select Objid
        From Customer_Order_Line t
       Where t.Order_No = Datalist_(1)
         And t.Line_No = Datalist_(2)
         And t.Rel_No = Datalist_(3)
         And t.Line_Item_No = Datalist_(4);
    Fetch Cur_
      Into Objid_;
    Close Cur_;
    Return Objid_;
  Exception
    When Others Then
      Return Null;
    
  End;

  Function Get_Par_Order_(Order_No_     In Varchar2,
                          Line_No_      In Varchar2,
                          Rel_No_       Varchar2,
                          Line_Item_No_ Number,
                          If_Contract   In Varchar2 Default '0')
    Return Varchar2 Is
    Cur_    t_Cursor;
    Row_    Bl_v_Customer_Order_V01%Rowtype;
    Result_ Varchar2(100);
  Begin
    Open Cur_ For
      Select t.*
        From Bl_v_Customer_Order_V01 t
       Where t.Order_No = Order_No_
         And t.Line_No = Line_No_
         And t.Rel_No = Rel_No_
         And t.Line_Item_No = Line_Item_No_;
    Fetch Cur_
      Into Row_;
    If Cur_%Found Then
      Close Cur_;
      If Nvl(Row_.Demand_Order_No, '-') = '-' Then
        If If_Contract = '1' Then
          Return Row_.Co_Contract;
        End If;
        If If_Contract = 'OBJID' Then
          Return Row_.Co_Objid;
        End If;
      
        Return Row_.Order_No || '-' || Row_.Line_No || '-' || Row_.Rel_No || '-' || To_Char(Row_.Line_Item_No);
      
      End If;
      Result_ := Get_Par_Order_(Row_.Demand_Order_No,
                                Row_.Demand_Line_No,
                                Row_.Demand_Rel_No,
                                Row_.Demand_Line_Item_No,
                                If_Contract);
      Return Nvl(Result_,
                 Row_.Demand_Order_No || '-' || Row_.Demand_Line_No || '-' ||
                 Row_.Demand_Rel_No || '-' ||
                 To_Char(Row_.Demand_Line_Item_No));
    End If;
    Close Cur_;
    Return Nvl(Result_,
               Order_No_ || '-' || Line_No_ || '-' || Rel_No_ || '-' ||
               To_Char(Line_Item_No_));
  
  End;

  --
  --获取工厂域的订单信息
  Function Get_Factory_Order_(Order_No_     In Varchar2,
                              Line_No_      In Varchar2,
                              Rel_No_       Varchar2,
                              Line_Item_No_ Number,
                              If_Contract   In Varchar2 Default '0')
    Return Varchar2 Is
    Cur_    t_Cursor;
    Row_    Bl_v_Customer_Order_V01%Rowtype;
    Result_ Varchar2(100);
  Begin
    Open Cur_ For
      Select t.*
        From Bl_v_Customer_Order_V01 t
       Where t.Demand_Order_No = Order_No_
         And t.Demand_Line_No = Line_No_
         And t.Demand_Rel_No = Rel_No_
         And t.Demand_Line_Item_No = Line_Item_No_;
    Fetch Cur_
      Into Row_;
    If Cur_%Found Then
      Close Cur_;
      Result_ := Get_Factory_Order_(Row_.Order_No,
                                    Row_.Line_No,
                                    Row_.Rel_No,
                                    Row_.Line_Item_No,
                                    If_Contract);
      If If_Contract = '1' Then
        Return Nvl(Result_, Row_.Co_Contract);
      End If;
      If If_Contract = 'OBJID' Then
        Return Nvl(Result_, Row_.Co_Objid);
      End If;
      Return Nvl(Result_,
                 Row_.Order_No || '-' || Row_.Line_No || '-' || Row_.Rel_No || '-' ||
                 To_Char(Row_.Line_Item_No));
    End If;
    Close Cur_;
    If If_Contract = '1' Then
      Open Cur_ For
        Select t.Contract
          From Customer_Order_Line t
         Where t.Order_No = Order_No_
           And t.Line_No = Line_No_
           And t.Rel_No = Rel_No_
           And t.Line_Item_No = Line_Item_No_
           And Rownum = 1;
      Fetch Cur_
        Into Row_.Co_Contract;
      Close Cur_;
      Return Row_.Co_Contract;
    End If;
    If If_Contract = 'OBJID' Then
      Open Cur_ For
        Select t.Objid
          From Customer_Order_Line t
         Where t.Order_No = Order_No_
           And t.Line_No = Line_No_
           And t.Rel_No = Rel_No_
           And t.Line_Item_No = Line_Item_No_
           And Rownum = 1;
      Fetch Cur_
        Into Row_.Co_Objid;
      Close Cur_;
      Return Row_.Co_Objid;
    End If;
  
    Return Nvl(Result_,
               Order_No_ || '-' || Line_No_ || '-' || Rel_No_ || '-' ||
               To_Char(Line_Item_No_));
  
  End;
  --获取工厂域的订单信息
  Procedure Get_Factory_Orderrow_(Order_No_     In Varchar2,
                                  Line_No_      In Varchar2,
                                  Rel_No_       Varchar2,
                                  Line_Item_No_ Number,
                                  Outrow_       Out Bl_v_Customer_Order_V01%Rowtype) Is
    Cur_       t_Cursor;
    Row_       Bl_v_Customer_Order_V01%Rowtype;
    Resultrow_ Bl_v_Customer_Order_V01%Rowtype;
  Begin
    Open Cur_ For
      Select t.*
        From Bl_v_Customer_Order_V01 t
       Where t.Demand_Order_No = Order_No_
         And t.Demand_Line_No = Line_No_
         And t.Demand_Rel_No = Rel_No_
         And t.Demand_Line_Item_No = Line_Item_No_;
    Fetch Cur_
      Into Row_;
    If Cur_%Found Then
      Close Cur_;
      Get_Factory_Orderrow_(Row_.Order_No,
                            Row_.Line_No,
                            Row_.Rel_No,
                            Row_.Line_Item_No,
                            Resultrow_);
      If Nvl(Resultrow_.Order_No, '-') = '-' Then
        Outrow_ := Row_;
      End If;
    Else
      Close Cur_;
    End If;
  
    Return;
  End;

End Bl_Customer_Order_Line_Api;
/
